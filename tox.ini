[tox]
min_version = 4.0.9
envlist =
    py{38,39,310,311,py3}-{build,audit,tests}
    readme
    secrets
    style

    pex
    shiv

    docs-{dirhtml,doctest,linkcheck,spelling,style}
skipsdist = True

[testenv]
changedir = {envtmpdir}
passenv = CI, HYPOTHESIS_PROFILE, GITHUB_STEP_SUMMARY
setenv =
    coverage,ghcoverage: MAYBE_COVERAGE=coverage run -m
    coverage,ghcoverage: COVERAGE_RCFILE={toxinidir}/.coveragerc
    coverage,ghcoverage: COVERAGE_DEBUG_FILE={envtmpdir}/coverage-debug
    coverage,ghcoverage: COVERAGE_FILE={envtmpdir}/coverage-data
args_are_paths = false
commands =
    build: {envpython} -m build {toxinidir} --outdir {envtmpdir}/dist
    !build: {envpython} -m pip install --disable-pip-version-check {toxinidir}

    audit: {envpython} -m pip_audit

    tests,coverage,ghcoverage: {envpython} -m {env:MAYBE_COVERAGE:} virtue {posargs:venvs}
    tests: {envpython} -m doctest {toxinidir}/README.rst

    coverage: {envpython} -m coverage report --show-missing
    coverage: {envpython} -m coverage html --directory={envtmpdir}/htmlcov
deps =
    !build: -r{toxinidir}/requirements.txt

    audit: pip-audit
    build: build
    tests,coverage,ghcoverage: virtue
    coverage,ghcoverage: coverage

[testenv:bandit]
deps = bandit
commands = {envpython} -m bandit --recursive venvs

[testenv:readme]
deps =
    build
    twine
commands =
    {envpython} -m build --outdir {envtmpdir}/dist {toxinidir}
    {envpython} -m twine check {envtmpdir}/dist/*

[testenv:secrets]
deps = detect-secrets
commands = {envbindir}/detect-secrets scan {toxinidir}

[testenv:style]
deps =
    flake8
    flake8-broken-line
    flake8-bugbear
    flake8-commas
    flake8-quotes
    flake8-tidy-imports
commands =
    {envpython} -m flake8 {posargs} {toxinidir}/venvs {toxinidir}/docs

[testenv:docs-dirhtml]
commands = {envpython} -m sphinx -b dirhtml {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps = -r{toxinidir}/docs/requirements.txt

[testenv:docs-doctest]
commands = {envpython} -m sphinx -b doctest {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps = {[testenv:docs-dirhtml]deps}

[testenv:docs-linkcheck]
commands = {envpython} -m sphinx -b linkcheck {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -q -T -W}
deps = {[testenv:docs-dirhtml]deps}

[testenv:docs-spelling]
commands = {envpython} -m sphinx -b spelling {toxinidir}/docs/ {envtmpdir}/build {posargs:-a -n -T -W}
deps = {[testenv:docs-dirhtml]deps}

[testenv:docs-style]
commands =
    doc8 --max-line-length 1000 --ignore-path {toxinidir}/docs/requirements.txt {posargs} {toxinidir}/docs
deps =
    doc8
    pygments
    pygments-github-lexers

[testenv:pex]
basepython = python3.11
passenv = C_INCLUDE_PATH, LDFLAGS
commands =
    {envbindir}/pex {toxinidir} --entry-point venvs --output-file {toxinidir}/dist/venvs {posargs}
deps = pex

[testenv:shiv]
basepython = python3.11
allowlist_externals = mkdir
commands =
    mkdir -p {toxinidir}/dist
    {envbindir}/shiv -c venvs -o {toxinidir}/dist/venvs -p {[testenv:shiv]basepython} -r {toxinidir}/requirements.txt {toxinidir}
deps = shiv
